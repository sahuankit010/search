{"ast":null,"code":"var _jsxFileName = \"/Users/sahuankit010/Desktop/Repo/cyberMiner/src/components/Autocomplete.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      var mostInput = '';\n      var wholeInput = e.currentTarget.value.split(\" \");\n      wholeInput.map(word => {\n        if (wholeInput[wholeInput.length - 1] === word) {} else {\n          mostInput = mostInput + word + ' ';\n        }\n\n        return true;\n      });\n      var userInput;\n\n      if (e.currentTarget.value[e.currentTarget.value.length - 1] === ' ') {\n        userInput = ' ';\n      } else {\n        userInput = wholeInput[wholeInput.length - 1];\n      } // Filter our suggestions that don't contain the user's input\n\n\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.indexOf(userInput) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value,\n        mostInput: mostInput\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: this.state.mostInput + e.currentTarget.innerText\n      });\n    };\n\n    this.onBlur = e => {// this.setState({\n      //     showSuggestions: false\n      // });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state; // User pressed the enter key\n\n      if (e.keyCode === 13) {\n        this.setState({\n          showSuggestions: false\n        });\n      } // User pressed the up arrow\n      else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } // User pressed the down arrow\n      else if (e.keyCode === 40) {\n        if (activeSuggestion - 1 === filteredSuggestions.length) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion + 1\n        });\n      }\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n      mostInput: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.setSearchValue(this.state.userInput);\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onBlur,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions\",\n          children: filteredSuggestions.map((suggestion, index) => {\n            let className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = \"suggestion-active\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this);\n      } else {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-suggestions\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"No Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this);\n      }\n    } else if (!userInput) {\n      suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-suggestions\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"No search terms entered yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Search Websites:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: onChange,\n            onKeyDown: onKeyDown,\n            onBlur: onBlur,\n            value: userInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), suggestionsListComponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAutocomplete.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nAutocomplete.defaultProps = {\n  suggestions: []\n};\nexport default Autocomplete;","map":{"version":3,"names":["React","Component","Fragment","PropTypes","Autocomplete","constructor","props","onChange","e","suggestions","mostInput","wholeInput","currentTarget","value","split","map","word","length","userInput","filteredSuggestions","filter","suggestion","indexOf","setState","activeSuggestion","showSuggestions","onClick","state","innerText","onBlur","onKeyDown","keyCode","handleSubmit","bind","event","preventDefault","setSearchValue","render","suggestionsListComponent","index","className","propTypes","instanceOf","Array","defaultProps"],"sources":["/Users/sahuankit010/Desktop/Repo/cyberMiner/src/components/Autocomplete.js"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Autocomplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: \"\",\n            mostInput: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.setSearchValue(this.state.userInput);\n    }\n    static propTypes = {\n        suggestions: PropTypes.instanceOf(Array)\n    };\n\n    static defaultProps = {\n        suggestions: []\n    };\n\n    onChange = e => {\n        const { suggestions } = this.props;\n\n\n        var mostInput = ''\n\n        var wholeInput = e.currentTarget.value.split(\" \");\n        wholeInput.map(word => {\n            if(wholeInput[wholeInput.length - 1] === word){\n                \n            } else {\n                mostInput = mostInput + word + ' ';\n            }\n            return true;\n        })\n        var userInput;\n        if(e.currentTarget.value[e.currentTarget.value.length - 1] === ' ') {\n            userInput = ' ';\n        } else {\n            userInput = wholeInput[wholeInput.length - 1];\n        }\n\n\n        // Filter our suggestions that don't contain the user's input\n        const filteredSuggestions = suggestions.filter(\n            suggestion =>\n                suggestion.indexOf(userInput) > -1\n        );\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value,\n            mostInput: mostInput\n        });\n    };\n\n    onClick = e => {\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: this.state.mostInput + e.currentTarget.innerText\n        });\n    };\n\n    onBlur = e => {\n        // this.setState({\n        //     showSuggestions: false\n        // });\n    }\n\n    onKeyDown = e => {\n        const { activeSuggestion, filteredSuggestions } = this.state;\n\n        // User pressed the enter key\n        if (e.keyCode === 13) {\n            this.setState({\n                showSuggestions: false,\n            });\n        }\n        // User pressed the up arrow\n        else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n                return;\n            }\n\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\n        }\n        // User pressed the down arrow\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\n        }\n    };\n\n    render() {\n        const {\n            onChange,\n            onClick,\n            onBlur,\n            onKeyDown,\n            state: {\n                activeSuggestion,\n                filteredSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n\n        let suggestionsListComponent;\n\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <ul className=\"suggestions\">\n                        {filteredSuggestions.map((suggestion, index) => {\n                            let className;\n\n                            // Flag the active suggestion with a class\n                            if (index === activeSuggestion) {\n                                className = \"suggestion-active\";\n                            }\n\n                            return (\n                                <li className={className} key={suggestion} onClick={onClick}>\n                                    {suggestion}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                suggestionsListComponent = (\n                    <div className=\"no-suggestions\">\n                        <em>No Results</em>\n                    </div>\n                );\n            }\n        } else if (!userInput) {\n            suggestionsListComponent = (\n                <div className=\"no-suggestions\">\n                    <em>No search terms entered yet</em>\n                </div>\n            );\n        } \n\n        return (\n            <Fragment>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Search Websites:&nbsp;\n                        <input type=\"text\"\n                            onChange={onChange}\n                            onKeyDown={onKeyDown}\n                            onBlur={onBlur}\n                            value={userInput} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                {suggestionsListComponent}\n            </Fragment>\n        );\n    }\n}\n\nexport default Autocomplete;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
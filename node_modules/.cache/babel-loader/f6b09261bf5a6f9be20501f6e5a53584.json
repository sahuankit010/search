{"ast":null,"code":"var _jsxFileName = \"/Users/sahuankit010/Desktop/Repo/cyberMiner/src/components/Results.js\";\nimport React from 'react';\nimport styles from \"../App.css\";\nimport Table from \"./Table/Table.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteWebsite = websiteUrl => {\n      this.props.setCurrentWebsites(websiteUrl);\n    };\n\n    this.clickedURL = websiteUrl => {\n      this.props.increaseAccessCount(websiteUrl);\n    };\n\n    this.state = {\n      results: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.search();\n    }\n  }\n\n  filterSearchValue(searchValue) {\n    return searchValue.replace(/[^a-zA-Z ]/g, \"\");\n  }\n\n  search() {\n    var filteredWebsites = [];\n    var searchValueArray = [];\n    var searchValue = this.props.searchValue;\n\n    if (this.props.isFiltered) {\n      searchValue = this.filterSearchValue(this.props.searchValue);\n    }\n\n    searchValueArray = searchValue.trim().split(/ +/);\n\n    switch (this.props.searchType) {\n      case 'OR':\n        filteredWebsites = this.props.currentWebsites.filter(website => {\n          return searchValueArray.some(word => website.description.includes(word));\n        });\n        break;\n\n      case 'AND':\n        filteredWebsites = this.props.currentWebsites.filter(website => {\n          return searchValueArray.every(word => website.description.includes(word));\n        });\n        break;\n\n      case 'NOT':\n        filteredWebsites = this.props.currentWebsites.filter(website => {\n          return !searchValueArray.some(word => website.description.includes(word));\n        });\n        break;\n\n      default:\n        filteredWebsites = this.props.currentWebsites.filter(website => {\n          return searchValueArray.some(word => website.description.includes(word));\n        });\n    }\n\n    if (this.props.isAlphabetical) {\n      filteredWebsites.sort(this.compareURL);\n    }\n\n    if (this.props.isFrequentlyAccessed) {\n      filteredWebsites.sort(this.compareAccess);\n    }\n\n    if (this.props.searchValue === '') {\n      this.setState({\n        results: []\n      });\n    } else {\n      this.setState({\n        results: filteredWebsites\n      });\n    }\n  }\n\n  compareURL(a, b) {\n    if (a.URL < b.URL) {\n      return -1;\n    }\n\n    if (a.URL > b.URL) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  compareAccess(a, b) {\n    if (a.timesAccessed < b.timesAccessed) {\n      return 1;\n    }\n\n    if (a.timesAccessed > b.timesAccessed) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            data: this.state.results,\n            rowsPerPage: this.props.numberPerPage,\n            deleteWebsite: this.deleteWebsite,\n            clickedURL: this.clickedURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Results;","map":{"version":3,"names":["React","styles","Table","Results","Component","constructor","props","deleteWebsite","websiteUrl","setCurrentWebsites","clickedURL","increaseAccessCount","state","results","componentDidUpdate","prevProps","search","filterSearchValue","searchValue","replace","filteredWebsites","searchValueArray","isFiltered","trim","split","searchType","currentWebsites","filter","website","some","word","description","includes","every","isAlphabetical","sort","compareURL","isFrequentlyAccessed","compareAccess","setState","a","b","URL","timesAccessed","render","container","wrapper","numberPerPage"],"sources":["/Users/sahuankit010/Desktop/Repo/cyberMiner/src/components/Results.js"],"sourcesContent":["import React from 'react';\nimport styles from \"../App.css\";\nimport Table from \"./Table/Table.jsx\";\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: []\n    };\n  }\n\n  deleteWebsite = (websiteUrl) => {\n    this.props.setCurrentWebsites(websiteUrl);\n  }\n\n  clickedURL = (websiteUrl) => {\n    this.props.increaseAccessCount(websiteUrl);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.search();\n    }\n  }\n\n  filterSearchValue(searchValue) {\n    return searchValue.replace(/[^a-zA-Z ]/g, \"\")\n  }\n\n  search() {\n    var filteredWebsites = [];\n    var searchValueArray = [];\n    var searchValue = this.props.searchValue;\n\n    if (this.props.isFiltered) { searchValue = this.filterSearchValue(this.props.searchValue) }\n    searchValueArray = searchValue.trim().split(/ +/);\n\n    switch (this.props.searchType) {\n      case 'OR':\n        filteredWebsites = this.props.currentWebsites.filter((website) => {\n          return searchValueArray.some(word => website.description.includes(word));\n        })\n        break;\n      case 'AND':\n        filteredWebsites = this.props.currentWebsites.filter((website) => {\n          return searchValueArray.every(word => website.description.includes(word));\n        })\n        break;\n      case 'NOT':\n        filteredWebsites = this.props.currentWebsites.filter((website) => {\n          return !searchValueArray.some(word => website.description.includes(word));\n        })\n        break;\n      default:\n        filteredWebsites = this.props.currentWebsites.filter((website) => {\n          return searchValueArray.some(word => website.description.includes(word));\n        })\n    }\n\n    if (this.props.isAlphabetical) { filteredWebsites.sort(this.compareURL) }\n    if (this.props.isFrequentlyAccessed) { filteredWebsites.sort(this.compareAccess) }\n\n    if (this.props.searchValue === '') {\n      this.setState({ results: [] });\n\n    } else {\n      this.setState({ results: filteredWebsites });\n    }\n  }\n\n  compareURL(a, b) {\n    if (a.URL < b.URL) { return -1 }\n    if (a.URL > b.URL) { return 1 }\n    return 0;\n  }\n\n  compareAccess(a, b) {\n    if (a.timesAccessed < b.timesAccessed) { return 1 }\n    if (a.timesAccessed > b.timesAccessed) { return -1 }\n    return 0;\n  }\n\n  render() {\n    return (\n      <div>\n        <main className={styles.container}>\n          <div className={styles.wrapper}>\n            <Table data={this.state.results} rowsPerPage={this.props.numberPerPage} deleteWebsite={this.deleteWebsite} clickedURL={this.clickedURL} />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Results;"],"mappings":"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"},"metadata":{},"sourceType":"module"}